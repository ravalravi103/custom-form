[{"/home/raviraval/Desktop/deuex/custom-form/custom-form/src/reportWebVitals.js":"1","/home/raviraval/Desktop/deuex/custom-form/custom-form/src/App.js":"2","/home/raviraval/Desktop/deuex/custom-form/custom-form/src/index.js":"3"},{"size":362,"mtime":1606455268610,"results":"4","hashOfConfig":"5"},{"size":3837,"mtime":1606666908403,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1606455268610,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lnnuxb",{"filePath":"10","messages":"11","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/raviraval/Desktop/deuex/custom-form/custom-form/src/reportWebVitals.js",[],"/home/raviraval/Desktop/deuex/custom-form/custom-form/src/App.js",["15","16","17","18","19"],"import './App.css';\n\nimport React,{useState} from 'react';\n\nimport fieldData from './data/data.json';\n\nfunction App() {\n\n   let allFields = [];\n   let element = ''\n\n   function createLabel() {\n     \n   }\n\n   function createTextArea(field){\n      return element = (<textarea \n                          name={field.attributes.name}\n                          rows={field.attributes.rows}\n                          cols={field.attributes.cols}\n                          ></textarea>)\n   }\n\n  function createButton(field){\n  return element = (<button\n                      formAction={field.attributes.formAction}\n                      formEncType={field.attributes.formEncType}\n                      formMethod={field.attributes.formMethod}\n                      formTarget={field.attributes.target}\n                      >\n                      {field.attributes.value}\n                    </button>)\n  }\n\n  function createSelectField(field){\n      return element = (\n                  <select name={field.attributes.name}>\n                      {field.options.map(option => {\n                            <option \n                                key={option.key} \n                                value={option.value}>\n                                  {option.displayValue}\n                            </option>\n                      })}\n                  </select>)\n        \n  }\n\n  function checkInputTypeField(field){\n    switch(field.fieldConfig.type){\n      case 'text':\n        element =  (<input\n                      type={field.fieldConfig.type}\n                      name={field.attributes.name}\n                      placeholder={field.attributes.placeholder}\n                      maxLength={field.attributes.maxLength}\n                      minLength={field.attributes.minLength}\n                      size={field.attributes.size}\n                      list={field.attributes.list}\n                      required={field.validation.required}\n                  />)\n          break;\n        case 'password':\n              element = (<input\n                type={field.fieldConfig.type}\n                name={field.attributes.name}\n                placeholder={field.attributes.placeholder}\n                maxLength={field.attributes.maxLength}\n                minLength={field.attributes.minLength}\n                size={field.attributes.size}\n                list={field.attributes.list}\n                required={field.validation.required}\n            />)\n          break;\n        case 'radio': \n                element = (<input\n                  type={field.fieldConfig.type}\n                  name={field.attributes.name}\n                  placeholder={field.attributes.placeholder} \n                  value={field.attributes.value}      \n                  required={field.validation.required}\n                />)\n\n    }\n    return element\n  }\n\n  const createField = () => {\n    fieldData.map(field => {\n          switch(field.fieldName) {\n            case 'input':\n                element =  checkInputTypeField(field);\n                allFields.push(element)\n               break;\n             case 'select':\n                 element = createSelectField(field);\n                 allFields.push(element)\n               break;\n             case \"button\": \n                  element = createButton(field);\n                  allFields.push(element);\n                break;\n              case 'textarea':\n                  element = createTextArea(field);\n                  allFields.push(element);\n                break;\n              case 'label': \n                   element = createLabel(field);\n                   allFields.push(element);\n                break;\n           }\n           \n    })\n    return allFields;\n}\n  \n  return (\n    <div className=\"App\" >\n         {createField()}\n    </div>\n  );\n}\n\nexport default App;\n","/home/raviraval/Desktop/deuex/custom-form/custom-form/src/index.js",[],{"ruleId":"20","severity":1,"message":"21","line":3,"column":15,"nodeType":"22","messageId":"23","endLine":3,"endColumn":23},{"ruleId":"24","severity":1,"message":"25","line":38,"column":49,"nodeType":"26","messageId":"27","endLine":38,"endColumn":51},{"ruleId":"28","severity":1,"message":"29","line":50,"column":5,"nodeType":"30","messageId":"31","endLine":84,"endColumn":6},{"ruleId":"24","severity":1,"message":"25","line":89,"column":25,"nodeType":"26","messageId":"27","endLine":89,"endColumn":27},{"ruleId":"28","severity":1,"message":"29","line":90,"column":11,"nodeType":"30","messageId":"31","endLine":111,"endColumn":13},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]